
//global variables
var participants = [],
 incompatibilityGroups = {},
 numberOfIncompatibilityButtons = 0;

//Add new secret santa participant.
function addParticipant() {

 var participant = $('#participant').val();

 $('#participant').val('');

 if (participant) {

  participants.push(participant);
  if (incompatibilityGroups[participant]) {
   $('#duplicate-name-warning').css('display', 'inline');
  }
   else {

    $('#duplicate-name-warning').css('display', 'none');
    incompatibilityGroups[participant] = {
     initialized: true
    };

    if (numberOfIncompatibilityButtons === 0) {
     $('#participant-list-title').css('display', 'inline');
    }

    var incompatibilityField = document.createElement('input'),
     newFieldId = 'incompatibility-field'.concat(numberOfIncompatibilityButtons);
    $(incompatibilityField).attr('id', newFieldId);
    $(incompatibilityField).attr('placeholder', 'incompatibility group for ' + participant + '?');
    $(incompatibilityField).attr('size', '50');

    var incompatibilityButton = document.createElement('button');
    $(incompatibilityButton).attr('id', 'incompatibility-button' + numberOfIncompatibilityButtons);
    $(incompatibilityButton).html('Add group');
    $(incompatibilityButton).click(function() {
     var currentIndex = this.id.charAt( this.id.length-1 ),
      participantName = participants[ parseInt( currentIndex ) ],
      incompatibilityGroupName = $('#incompatibility-field' + currentIndex).val();
     if (incompatibilityGroupName) {
      $('#incompatibility-field' + currentIndex).val('');
      incompatibilityGroups[participantName][incompatibilityGroupName] = true;
      $('#nameText' + currentIndex).append('&nbsp;&nbsp;' + '<span style="color: black; font-weight: normal;">' + incompatibilityGroupName + '</span>');
     }
    });

    var participantNameText = document.createElement('div');
    $(participantNameText).attr('id', 'nameText' + numberOfIncompatibilityButtons);
    participantNameText.append(participant);

    $('#participant-list').append(participantNameText);
    $('#participant-list').append('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;');
    $('#participant-list').append(incompatibilityField);
    $('#participant-list').append('&nbsp;&nbsp;');
    $('#participant-list').append(incompatibilityButton);
    $('#participant-list').append('<br>');
    $('#participant-list').append('<br>');

    numberOfIncompatibilityButtons++;

   }

 }

}

//Invoke API with data provided by user.
function submitJSON(e) {

 e.preventDefault();

 var participant = $('#participant').val(),
  mensis = $('#mensis').val();

 var jsonSubmission = {
  participants: participants,
  incompatibilityGroups: incompatibilityGroups
 };

 console.warn('Submitting request to API with the following JSON: \n', JSON.stringify(incompatibilityGroups));

 $.post('http://localhost:3000/', incompatibilityGroups).then(function(body) {

  console.log('response: ' + JSON.stringify(body));

  $('body').html('<br><br><br><br>');

  //Display secret santa relationships generated by API.
  //Let user know if it was impossible to generate a full secret santa set from the list.
  if (!body.hasOwnProperty('secretSantaIsImpossible')) {
   for(var key in body) {
    $('body').append('<div>' + key + ' will be secret santa for ' + body[key] + '.</div>');
   }
  }
   else {
    $('body').append('Based on the given data, it is impossible to generate secret santas for everyone.');
   }

 });

};
